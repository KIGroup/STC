<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Utils.TaskSudentsAutoMailing">
<Super>%SYS.Task.Definition</Super>
<TimeCreated>63218,17446.070787</TimeCreated>

<Method name="OnTask">
<Description><![CDATA[
This method is responsible for executing the task.<br>
At the scheduled time, the Task Manager creates an instance of this object,
sets any property values using the stored "settings" for the task, and then
invokes this method to execute the task.<br>
In order to execute a real task, override this method in a subclass.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set diffDays = $GET(^Settings("Stc", "StudentsAutoMailingDays"), 2)
		
	&sql(DECLARE TrCur CURSOR FOR 
			SELECT ID
		 	FROM Stc_Data.Training
		 	WHERE IsStudentsAutoMailing = 1 AND DATEDIFF(D,{fn NOW()}, DateStart) = :diffDays)	
		
	&sql(OPEN TrCur)
	for  
	{	
		&sql(FETCH TrCur INTO :trainingId) 
		quit:(SQLCODE '= 0)
		
		set training = ##class(Stc.Data.Training).%OpenId(trainingId)
		set msg =  ##class(%MessageDictionary).FormatText(##class(Stc.Utils.Msg).GetMsg("msgToTrainingStudents"),
						$ZDATE(training.DateStart, 3),
						training.Course.Name.Value,
						training.City.Name.Value_", "_training.City.ParentRegion.Name.Value_", "_training.City.ParentRegion.ParentRegion.Name.Value,
						training.Street.Value,
						training.Room,
						$e(##class(%Library.Time).LogicalToDisplay(training.TimeStart), 1, 5)_" - "_$e(##class(%Library.Time).LogicalToDisplay(training.TimeFinish), 1, 5),
						training.Teacher.LastName.Value_" "_training.Teacher.FirstName.Value,
						training.OtherInfo.Value)
		
		set emailList = ##class(%ListOfDataTypes).%New()
		
		&sql(DECLARE StudCur CURSOR FOR 
		 	 	SELECT Students->Email 
		 	 	FROM Stc_Data.SubGroup_Students
		 	 	WHERE SubGroup IN (SELECT SubGroups FROM Stc_Data.Training_SubGroups WHERE Training = :trainingId))	
		&sql(OPEN StudCur)
		for  
		{	
			&sql(FETCH StudCur INTO :email) 
			quit:(SQLCODE '= 0)
			
			do emailList.Insert(email)		
		}
		&sql(CLOSE StudCur)
		
		
		if (emailList.Count() > 0){
			set status = ##class(Stc.Utils.Email).Send(emailList, ##class(Stc.Utils.Msg).GetMsg("msgSubjectToTrainingStudents"), msg)
			
			if '$$$ISERR(status){
				set training.IsStudentsAutoMailing = 0
				do training.%Save()
			}
		}						
	}
		
	&sql(CLOSE TrCur)
	
	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
