<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Data.OrderApproved">
<Description>
Apllication, approved by admin</Description>
<ClassType>persistent</ClassType>
<Super>Stc.Data.Order</Super>
<TimeCreated>63098,13302.19979</TimeCreated>

<Parameter name="DSTIME">
<Description>
Cube update parameter</Description>
<Default>auto</Default>
</Parameter>

<Property name="Company">
<Description>
Customer organization</Description>
<Type>Company</Type>
<Required>1</Required>
</Property>

<Property name="AccessCode">
<Description>
Access code for full filling by customer</Description>
<Type>%String</Type>
</Property>

<Index name="AccessCodeIdx">
<Properties>AccessCode</Properties>
<Unique>1</Unique>
</Index>

<Property name="StudentsNumber">
<Description>
Students count</Description>
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<Method name="SynchronizeCube">
<Description>
Synchronization cube</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	do ##class(%DeepSee.Utils).%SynchronizeCube("OrderApprovedCube",0)
]]></Implementation>
</Method>

<Method name="Create">
<Description>
Create approved application from "new"</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[dirtyId:%String,&status]]></FormalSpec>
<ReturnType>Stc.Data.OrderApproved</ReturnType>
<Implementation><![CDATA[
	do ##class(Stc.Utils.Log).Create(..%ClassName(1)_".Create", "DirtyID="_dirtyId)
	
	set approved = ..%New()
	
	set dirty = ##class(Stc.Data.OrderDirty).%OpenId(dirtyId,3,.status)

	set approved.Course = dirty.Course
	set approved.Company = dirty.Company
	set approved.CreatedTS = dirty.CreatedTS
	set approved.AccessCode = $SYSTEM.Util.CreateGUID()
	set approved.OrderStatus = ##class(OrderStatus).CodeIdxOpen("Approved")
	
	set approved.StudentsNumber = dirty.StudentsNumber
	
	set status = approved.%Save()
	
	do ..SynchronizeCube()
	
	quit approved
]]></Implementation>
</Method>

<Method name="ConvertToProxyObject">
<Description>
Convert to proxyObject (for JSON)</Description>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	set proxy.id = ..%Id()
	set proxy.status = ..OrderStatus.ConvertToProxyObject()
	set proxy.code = ..AccessCode
	set proxy.course = ..Course.ConvertToProxyObject(1)
	set proxy.contact = ..Company.Contact.ConvertToProxyObject()
	set proxy.contact.company = ..Company.ConvertToProxyObject()
	set proxy.createdTS = ..CreatedTS
	set proxy.studentsNumber = ..StudentsNumber

	quit proxy
]]></Implementation>
</Method>

<Method name="CloseOrdersByTraining">
<Description>
Find approved orders and reduce "StudentsNubmer" if there student in the training. </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>trId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st = $$$OK
	
	&sql(DECLARE GrCur CURSOR FOR 
		 	 SELECT trSg.Training->Course, trSg.SubGroups, trSg.SubGroups->Payer, (SELECT COUNT(sgSt.Students) FROM Stc_Data.SubGroup_Students as sgSt WHERE sgSt.SubGroup = trSg.SubGroups)
		 	 FROM Stc_Data.Training_SubGroups as trSg
		 	 WHERE trSg.Training = :trId)	
		
	&sql(OPEN GrCur)
	for  
	{	
		&sql(FETCH GrCur INTO :courseId, :sgId, :payerId, :stCount) 
		quit:(SQLCODE '= 0)
	
		&sql(DECLARE OrdCur CURSOR FOR 
		 	 	SELECT ID
		 	 	FROM Stc_Data.OrderApproved
		 	 	WHERE OrderStatus->Code = 'Approved' AND Company = :payerId AND Course = :courseId)	
		
		&sql(OPEN OrdCur)
		for  
		{	
			&sql(FETCH OrdCur INTO :ordId) 
			quit:(SQLCODE '= 0)
			
			set order = ..%OpenId(ordId)			
				
			if (order.StudentsNumber <= stCount){
				set stCount = stCount - order.StudentsNumber
				set order.StudentsNumber = 0
				set order.OrderStatus = ##class(Stc.Data.OrderStatus).CodeIdxOpen("Closed")	
			}
			else{
				set order.StudentsNumber = order.StudentsNumber - stCount
				set stCount = 0
			}
				
			$$$THROWONERROR(st, order.%Save())
		}
		&sql(CLOSE OrdCur)
	}
	&sql(CLOSE GrCur)
	
	quit st
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>OrderApprovedDefaultData</DefaultData>
<Data name="OrderApprovedDefaultData">
<Subscript>"OrderApproved"</Subscript>
<Value name="1">
<Value>Company</Value>
</Value>
<Value name="2">
<Value>OrderStatus</Value>
</Value>
<Value name="3">
<Value>AccessCode</Value>
</Value>
<Value name="4">
<Value>StudentsNumber</Value>
</Value>
</Data>
<Data name="Students">
<Attribute>Students</Attribute>
<Structure>subnode</Structure>
<Subscript>"Stc.Data.OrderApproved.Students"</Subscript>
</Data>
</Storage>
</Class>
</Export>
