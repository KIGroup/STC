<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Data.Course">
<Description>
Course</Description>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeCreated>63098,13286.897066</TimeCreated>

<Property name="Name">
<Description>
Name</Description>
<Type>Stc.Data.Localization.LText</Type>
<Required>1</Required>
<Parameter name="XMLREFERENCE" value="ID"/>
</Property>

<Property name="Hours">
<Description>
Duration (in hours)</Description>
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<Property name="Days">
<Description>
Duration (in days)</Description>
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<Property name="ProgramUrl">
<Description>
Link to course syllabus</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="2500"/>
</Property>

<Property name="Teachers">
<Description>
Teachers</Description>
<Type>Person</Type>
<Collection>array</Collection>
</Property>

<Property name="IsInUse">
<Description>
Is active</Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
<Required>1</Required>
</Property>

<Property name="Price">
<Description>
Price of course</Description>
<Type>%Float</Type>
<InitialExpression>0</InitialExpression>
<Required>1</Required>
</Property>

<Property name="Currency">
<Description>
Currency</Description>
<Type>Currency</Type>
<Required>1</Required>
<Parameter name="XMLREFERENCE" value="ID"/>
</Property>

<Method name="ConvertToProxyObject">
<Description>
Convert to proxyObject (for JSON)</Description>
<FormalSpec>shortInfo:%Boolean=0</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
	set proxy = ##class(%ZEN.proxyObject).%New()
	
	set proxy.id = ..%Id()
	set proxy.name = ..Name.Value
	
	if (shortInfo = 1) quit proxy
	
	set proxy.days = ..Days
	set proxy.hours = ..Hours
	set proxy.programUrl = ..ProgramUrl
	set proxy.isInUse = ..IsInUse
	set proxy.price = ..Price
	set proxy.currency = ..Currency.ConvertToProxyObject()
	
	quit proxy
]]></Implementation>
</Method>

<Method name="Save">
<Description>
Create or save modified course</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[data:%RegisteredObject,&status]]></FormalSpec>
<ReturnType>Course</ReturnType>
<Implementation><![CDATA[
	if (data.id = ""){
		set course = ..%New()
		set course.Name = ##class(Stc.Data.Localization.LText).Create($ZCONVERT(data.name, "I","UTF8"))
	}
	else{
		set course = ..%OpenId(data.id)
		set course.Name.Value = $ZCONVERT(data.name, "I","UTF8")
	}
	
	set course.Hours = $ZCONVERT(data.hours, "I","UTF8")
	set course.Days = $ZCONVERT(data.days, "I","UTF8")
	set course.ProgramUrl = $REPLACE($REPLACE($ZCONVERT(data.programUrl, "I","UTF8"),"http://",""), "https://","")
	set course.Price = data.price
	set course.Currency = ##class(Stc.Data.Currency).%OpenId(data.currency.id)
	
	set status = course.%Save()
	
	quit course
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Stc.Data.CourseD</DataLocation>
<DefaultData>CourseDefaultData</DefaultData>
<IdLocation>^Stc.Data.CourseD</IdLocation>
<IndexLocation>^Stc.Data.CourseI</IndexLocation>
<StreamLocation>^Stc.Data.CourseS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="CourseDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>Hours</Value>
</Value>
<Value name="4">
<Value>Days</Value>
</Value>
<Value name="5">
<Value>ProgramUrl</Value>
</Value>
<Value name="6">
<Value>IsInUse</Value>
</Value>
<Value name="7">
<Value>Price</Value>
</Value>
<Value name="8">
<Value>Currency</Value>
</Value>
</Data>
<Data name="Teachers">
<Attribute>Teachers</Attribute>
<Structure>subnode</Structure>
<Subscript>"Teachers"</Subscript>
</Data>
</Storage>
</Class>
</Export>
