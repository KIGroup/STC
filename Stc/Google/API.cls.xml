<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.Google.API">
<Description>
Base class for Google API access</Description>
<Abstract>1</Abstract>
<IncludeCode>%callout,%occStatus,%occOptions</IncludeCode>
<TimeCreated>63145,69487.892963</TimeCreated>

<Method name="Call">
<Description><![CDATA[
Calls API at pUrl (without www.googleapis.com), with method pType, 
auth token pToken and request body - JSON of PObjInput.<br>
Work with Google JSON API, not GData.<br>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUrl:%String,pMethod:%String,pToken:%String,pSslConfig:%String,PObjInput:%ZEN.proxyObject="",*PResponse:%ZEN.proxyObject,timeout:%Integer=30</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set sc = $$$OK
 try 
 {
  set req = ##class(%Net.HttpRequest).%New()
  set req.SSLConfiguration = ##class(Stc.Data.Settings).GetGoogleSSLConfig()
  set req.Server = "www.googleapis.com"
  set req.Https = 1
  set req.Port = 443
  set req.ProxyHTTPS = 1
  /*
  set req.ProxyServer = $g(^Settings("Stc","Google", "ProxyServer"))
  set req.ProxyPort=$g(^Settings("Stc","Google", "ProxyPort"))
  set req.ProxyTunnel=$g(^Settings("Stc","Google", "ProxyTunnel"))
  */
  
  set req.Authorization="Bearer "_pToken
  set req.Timeout = timeout
  
  if PObjInput'="" {
  	set req.ContentType="application/json"
   
   	set tIO = $IO
   	set tMnemSpace = ##class(%Library.Device).GetMnemonicRoutine()
   	try{
	  $$$TOE(sc,##class(%ZEN.Auxiliary.jsonProvider).%WriteJSONStreamFromObject(req.EntityBody, PObjInput))
	  use tIO::("^"_tMnemSpace)
   }
   catch ex {
	  use tIO::("^"_tMnemSpace)
	  throw ex
   }
 
  }
 
  $$$TOE(sc,req.Send($zconvert(pMethod,"u"),pUrl))
  
  set json=req.HttpResponse.Data.Read()
 
  $$$TOE(sc,##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(json,,.PResponse))
 }
 catch ex
 {
  set sc = ex.AsStatus()
 }
 quit sc
]]></Implementation>
</Method>
</Class>
</Export>
