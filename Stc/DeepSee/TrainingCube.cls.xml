<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.DeepSee.TrainingCube">
<Description>
</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%DeepSee.CubeDefinition</Super>
<TimeCreated>63245,72855.695693</TimeCreated>
<DependsOn>Stc.Data.Training</DependsOn>

<Parameter name="DOMAIN">
<Default>Stc</Default>
</Parameter>

<XData name="Cube">
<Description>
Cube definition from Architect.</Description>
<XMLNamespace>http://www.intersystems.com/deepsee</XMLNamespace>
<Data><![CDATA[
<cube xmlns="http://www.intersystems.com/deepsee" name="TrainingCube" displayName="TrainingCube" description="после компиляции выполните do ##class(Stc.Utils.Msg).DeepSeeMsg() т.к. затираются лейблы" disabled="false" abstract="false" sourceClass="Stc.Data.Training" countMeasureName="%COUNT" bucketSize="8" bitmapChunkInMemory="false" precompute="0">
  <dimension name="Course" displayName="Курс" disabled="false" hasAll="false" allCaption="All Value" allDisplayName="Value" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="Course.Name" name="CourseName" displayName="Курс" disabled="false" list="false" useDisplayValue="true" useAsFilter="true">
        <property sourceProperty="Course.Name.Value" name="Value" displayName="Курс" disabled="false" hidden="false" isName="true" isReference="true" useDisplayValue="false"></property>
        <property sourceProperty="Course.Description.Value" name="Description"  disabled="false" hidden="false" isName="false" isReference="false" useDisplayValue="false" isDescription="true"> </property>
      </level>
    </hierarchy>
  </dimension>
  <dimension name="Year" displayName="Год" disabled="false" hasAll="false" allCaption="All DateFinish" allDisplayName="DateFinish" sourceProperty="DateFinish" type="time" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level name="Year" displayName="Год" disabled="false" timeFunction="Year" list="false" useDisplayValue="true" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="Teacher" displayName="Преподаватель" disabled="false" hasAll="false" allCaption="All Teacher" allDisplayName="Teacher" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="Teacher" name="TeacherFullName" displayName="Преподаватель" disabled="false" list="false" useDisplayValue="true" useAsFilter="true">
        <property sourceProperty="Teacher.FullName" name="FullName" displayName="Преподаватель" disabled="false" hidden="false" isName="true" isReference="true" useDisplayValue="false"></property>
      </level>
    </hierarchy>
  </dimension>
  <measure sourceProperty="%ID" name="Trainings" displayName="Обучения" disabled="false" aggregate="COUNT" type="integer" hidden="false" searchable="false" iKnowSource="string"></measure>
  <relationship name="SubGroupCubeRelation" disabled="false" relatedCube="SubGroupCube" inverse="TrainingCubeRelation" cardinality="many"></relationship>
  <listing name="Trainings" displayName="Обучения" disabled="false" listingType="table" sql="SELECT trTab.Course-&gt;Name-&gt;Value As &quot;$$$TEXT[&quot;Курс/Stc&quot;]&quot;,  trTab.City-&gt;Name-&gt;Value As &quot;$$$TEXT[&quot;Город/Stc&quot;]&quot;,  trTab.DateStart As &quot;$$$TEXT[&quot;Дата начала/Stc&quot;]&quot;,  trTab.DateFinish As &quot;$$$TEXT[&quot;Дата окончания/Stc&quot;]&quot;,  (SELECT COUNT(SubGroups) FROM Stc_Data.Training_SubGroups WHERE Training = trTab.ID) As &quot;$$$TEXT[&quot;Подгруппы/Stc&quot;]&quot;,  (SELECT COUNT(Students) FROM Stc_Data.SubGroup_Students as sgStuds INNER JOIN Stc_Data.Training_SubGroups As trSubs ON trSubs.Training = trTab.ID AND sgStuds.SubGroup=trSubs.SubGroups) As &quot;$$$TEXT[&quot;Слушатели/Stc&quot;]&quot;  FROM Stc_Data.Training as trTab WHERE trTab.ID IN (SELECT ID FROM $$$SOURCE WHERE $$$RESTRICT) ORDER BY &quot;$$$TEXT[&quot;Дата окончания/Stc&quot;]&quot;, &quot;$$$TEXT[&quot;Город/Stc&quot;]&quot;, &quot;$$$TEXT[&quot;Курс/Stc&quot;]&quot; "></listing>
</cube>
]]></Data>
</XData>

<Method name="GetStudentsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set count = 0
	
	&sql(SELECT COUNT(sgStudents.Students) INTO :count 
		 FROM Stc_Data.SubGroup_Students as sgStudents INNER JOIN 
		 	  Stc_Data.Training_SubGroups as trSubGroups ON trSubGroups.SubGroups = sgStudents.SubGroup
		 WHERE trSubGroups.Training = :id)
	
	quit count
]]></Implementation>
</Method>

<Method name="GetTeacherFullName">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set training = ##class(Stc.Data.Training).%OpenId(id)
	set fullName = training.Teacher.LastName.Value
	if (training.Teacher.FirstName.Value '= "-") set fullName = fullName_" "_training.Teacher.FirstName.Value
	quit fullName
]]></Implementation>
</Method>

<Method name="GetCompanies">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set training = ##class(Stc.Data.Training).%OpenId(id)
	set companies = ""
	set key = ""
	for i=1:1:training.SubGroups.Count(){
		set key = training.SubGroups.Next(key)
		//set companies = companies_training.SubGroups.GetAt(key).Payer.ShortName.Value_","
		set companies = companies_training.SubGroups.GetAt(key).Payer.%Id()_","
	}
	
	quit $E(companies,1,*-1)
]]></Implementation>
</Method>

<Method name="GetCompanyNameById">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set name = "--"
	&sql(SELECT ShortName->Value INTO :name FROM Stc_Data.Company WHERE ID = :id)
	quit name
]]></Implementation>
</Method>
</Class>
</Export>
