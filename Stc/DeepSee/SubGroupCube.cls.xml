<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Stc.DeepSee.SubGroupCube">
<Description>
</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%DeepSee.CubeDefinition</Super>
<TimeCreated>63258,11138.406341</TimeCreated>
<DependsOn>Stc.Data.TrainingSubGroups</DependsOn>

<Parameter name="DOMAIN">
<Default>Stc</Default>
</Parameter>

<XData name="Cube">
<Description>
Cube definition from Architect.</Description>
<XMLNamespace>http://www.intersystems.com/deepsee</XMLNamespace>
<Data><![CDATA[
<cube xmlns="http://www.intersystems.com/deepsee" name="SubGroupCube" displayName="SubGroupCube" description="после компиляции выполните do ##class(Stc.Utils.Msg).DeepSeeMsg() т.к. затираются лейблы" disabled="false" abstract="false" sourceClass="Stc.Data.TrainingSubGroups" countMeasureName="%COUNT" bucketSize="8" bitmapChunkInMemory="false" precompute="0">
  <dimension name="DateFinish" displayName="@year@" disabled="false" hasAll="false" allCaption="All DateFinish" allDisplayName="DateFinish" sourceProperty="Training.DateFinish" type="time" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level name="DateFinish" displayName="@year@" disabled="false" timeFunction="Year" list="false" useDisplayValue="true" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="ShortName" displayName="@company@" disabled="false" hasAll="false" allCaption="All Value" allDisplayName="Value" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="SubGroups.Payer.ShortName" name="ShortName" displayName="@company@" disabled="false" list="false" useDisplayValue="true" useAsFilter="true">
        <property sourceProperty="SubGroups.Payer.ShortName.Value" name="NameValue" displayName="@company@" disabled="false" hidden="false" isName="true" isDescription="false" isReference="true" useDisplayValue="false"></property>
      </level>
    </hierarchy>
  </dimension>
  <dimension name="Type" displayName="@univerOrPartner@" disabled="false" hasAll="false" allCaption="All Type" allDisplayName="Type" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="SubGroups.Payer.Type.Name" name="Name" displayName="@univerOrPartner@" disabled="false" list="false" useDisplayValue="true" useAsFilter="true">
        <property sourceProperty="SubGroups.Payer.Type.Name.Value" name="Value" displayName="@univerOrPartner@" disabled="false" hidden="false" isName="true" isDescription="false" isReference="true" useDisplayValue="false"></property>
      </level>
    </hierarchy>
  </dimension>
  <measure sourceExpression="%cube.GetStudentsCount(%source.%ID)" name="Students" displayName="@students@" disabled="false" aggregate="SUM" type="integer" hidden="false" searchable="false" iKnowSource="string"></measure>
  <relationship sourceProperty="Training" name="TrainingCubeRelation" disabled="false" relatedCube="TrainingCube" inverse="SubGroups" cardinality="one"></relationship>
  <listing name="Students" disabled="false" listingType="table" fieldList="SubGroups-&gt;Students-&gt;Email" sql="SELECT TOP 1000 stud.Students-&gt;LastName-&gt;Value || &apos; &apos; || ISNULL(stud.Students-&gt;FirstName-&gt;Value,&apos;&apos;) || &apos; &apos; || ISNULL(stud.Students-&gt;MiddleName-&gt;Value,&apos;&apos;) As &quot;$$$TEXT[&quot;@student/Stc&quot;]&quot;,  sg.Training-&gt;DateFinish As &quot;$$$TEXT[&quot;@datefinish/Stc&quot;]&quot;,  sg.Training-&gt;Course-&gt;Name-&gt;Value As &quot;$$$TEXT[&quot;@course/Stc&quot;]&quot;,  sg.Training-&gt;City-&gt;Name-&gt;Value As &quot;$$$TEXT[&quot;@city/Stc&quot;]&quot;  FROM Stc_Data.SubGroup_Students As stud INNER JOIN Stc_Data.Training_SubGroups as sg ON sg.SubGroups=stud.SubGroup  WHERE stud.SubGroup IN (SELECT SubGroups FROM $$$SOURCE WHERE $$$RESTRICT)  ORDER BY &quot;$$$TEXT[&quot;@datefinish/Stc&quot;]&quot;, &quot;$$$TEXT[&quot;@course/Stc&quot;]&quot;, &quot;$$$TEXT[&quot;@city/Stc&quot;]&quot;, &quot;$$$TEXT[&quot;@student/Stc&quot;]&quot;"></listing>
  <listing name="TrainingStudents" disabled="false" listingType="table" sql="SELECT  stud.Students-&gt;LastName-&gt;Value || &apos; &apos; || ISNULL(stud.Students-&gt;FirstName-&gt;Value,&apos;&apos;) || &apos; &apos; || ISNULL(stud.Students-&gt;MiddleName-&gt;Value,&apos;&apos;) As &quot;Слушатель&quot;, sg.Training-&gt;DateFinish As &quot;Дата обучения&quot;, sg.Training-&gt;Course-&gt;Name-&gt;Value As &quot;Курс&quot;, sg.Training-&gt;City-&gt;Name-&gt;Value As &quot;Город&quot; FROM Stc_Data.SubGroup_Students As stud INNER JOIN Stc_Data.Training_SubGroups as sg ON sg.SubGroups=stud.SubGroup WHERE sg.Training IN (SELECT Training FROM $$$SOURCE WHERE $$$RESTRICT) ORDER BY &quot;Дата обучения&quot;, &quot;Курс&quot;, &quot;Город&quot;, &quot;Слушатель&quot;"></listing>
</cube>
]]></Data>
</XData>

<Method name="GetStudentsCount">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	set count = 0
	
	&sql(SELECT COUNT(Students) INTO :count 
		 FROM Stc_Data.SubGroup_Students
		 WHERE SubGroup = (SELECT SubGroups FROM Stc_Data.Training_SubGroups WHERE ID=:id))
	
	quit count
]]></Implementation>
</Method>
</Class>
</Export>
