<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="stc/js/services/UtilsSrvc.js" application="/csp/stc/" default="1"><![CDATA[
'use strict';
//ddвddddв

/*===========================================================================================
Utils
===========================================================================================*/

servicesModule.factory('UtilsSrvc', function($dialog, $filter) {
	
	return {
		openMessageBox: function(title, msg, func){
    		var btns = [{result: true, label: 'Ок', cssClass: 'btn-primary btn-small'}, 
                        {result: false, label: $filter('localize')('Отмена'), cssClass: 'btn-small'}];

    		$dialog.messageBox($filter('localize')(title), $filter('localize')(msg), btns).open().then(function(result){
    		 	if (result && func)
    		 		func(); 
    		 });
    	},
    	openCustomMessageBox: function(title, msg, btns){
    		$dialog.messageBox($filter('localize')(title), $filter('localize')(msg), btns).open().then(function(result){
    		 	for (var i=0; i < btns.length; i++){
	    			if (result == btns[i].result && btns[i].func)
	    				btns[i].func();
	    		}
    		 });
    	},
    	getAlert: function(title, msg, eventType, visible){
        	return {title: $filter('localize')(title),
                    msg: $filter('localize')(msg),
                    cssClass: 'alert alert-' + eventType,
                    visible: visible};
    	},
    	getAlertLabel: function(msg, eventType){
        	return {msg: $filter('localize')(msg),
                    cssClass: eventType,
                    visible: true};
    	},
        getIndexes: function(array, objField, valueField){
            var indexes = [];
            
            if (!array) return indexes;
            
            for (var i = 0; i < array.length; i++) {
                if (array[i][objField] == valueField)
                    indexes.push(i);
            };
            return indexes;
        },
        getValidDate: function(str){
	        var date = new Date(str);
	        if (isNaN(date))
	        	return "";
	        	
	        return $filter('date')(date, 'dd-MM-y');
	    },
	    getTwoDate: function(start, finish){
	    	var startText = $filter('convertCacheDate')(start, $filter('localize')('d MMMM y'));
            var finishText = $filter('convertCacheDate')(finish, $filter('localize')('d MMMM y'));
				
			var startYearBorder = startText.indexOf(" ", 3);
			if (startYearBorder > 0){
				startText = startText.substring(0, startYearBorder); 	
			}
				
            return startText + ' - ' +  finishText;
	    },
        getPropertyValue: function (item, propertyStr, defaultValue){
            var value;
            defaultValue = defaultValue ? defaultValue : '';

            try{
                var properties = propertyStr.split('.');
                
                switch(properties.length){
                    case 1:
                        value = item[properties[0]];
                        break;
                    case 2:
                        value = item[properties[0]][properties[1]];
                        break;
                    case 3:
                        value = item[properties[0]][properties[1]][properties[2]];
                        break;
                    case 4:
                        value = item[properties[0]][properties[1]][properties[2]][properties[3]];
                        break;
                    case 5:
                        value = item[properties[0]][properties[1]][properties[2]][properties[3]][properties[4]];
                        break;
                }
            }
            catch(ex){
                //console.log('Cвойства не существует ' + propertyStr);
            }

            return value == undefined ? defaultValue : value;
        }
    }
});
  
]]></CSP>
</Export>
