<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="stc/js/controllers/AllTrainingsCtrl.js" application="/csp/six/" default="1"><![CDATA[
'use strict';
//ddвdddd

/*===========================================================================================
Все обучения
===========================================================================================*/

controllersModule.controller('AllTrainingsCtrl', function($scope, $filter, $location, $routeParams, UtilsSrvc, TrainingSrvc){
    $scope.menu.selectMenu('trainings');

    if (!$scope.pageStore.trainings)
        $scope.pageStore.trainings = {grid:{}};

    $scope.training = {};

    $scope.cert = {};

    $scope.training.init = function(){
        $scope.training.columns = [
                          {name: 'Курс',              sqlName: 'Course->Name->Value', isSorted: true,  isSortable: true,  isDown: false, isSearched: true,  isSearchable: true},
                          {name: 'Город',             sqlName: 'City->Name->Value',   isSorted: false, isSortable: true,  isDown: true,  isSearched: false, isSearchable: true},
                          {name: 'Дата начала',       sqlName: 'DateStart',           isSorted: false, isSortable: true,  isDown: true,  isSearched: false, isSearchable: false},
                          {name: 'Дата окончания',    sqlName: 'DateFinish',          isSorted: false, isSortable: true,  isDown: true,  isSearched: false, isSearchable: false},
                          {name: 'Время',             sqlName: '',                    isSorted: false, isSortable: false, isDown: true,  isSearched: false, isSearchable: false},
                          {name: 'Оплачено подгрупп', sqlName: '',                    isSorted: false, isSortable: false, isDown: true,  isSearched: false, isSearchable: false},
                          {name: 'Статус',            sqlName: 'IsCompleted',         isSorted: false, isSortable: true,  isDown: true,  isSearched: false, isSearchable: false}];
                            
        $scope.training.properties = [{name: 'course.name'}, 
                                      {name: 'city.name'}, 
                                      {name: 'dateStart', filter: 'date', filterParam: $filter('localize')('d MMMM y')}, 
                                      {name: 'dateFinish', filter: 'date', filterParam: $filter('localize')('d MMMM y')}, 
                                      {name: 'timeStartFinish'}, 
                                      {name: 'isPaidProgress', 
                                      getCssClass: function(item){
                                                    return 'label ' + (item.isPaid == 0 ? 'label-important' : 'label-success');
                                       }},
                                      {name: 'status', 
                                      getCssClass: function(item){
                                                    return 'label ' + (item.isCompleted == 0 ? 'label-info' : 'label-success');
                                        },
                                      calculate: function(item){
                                                    item.status = item.isCompleted == 1 ? $filter('localize')('Завершено') : $filter('localize')('Не завершено');
                                        }}];

        $scope.training.status = UtilsSrvc.getPropertyValue($scope.pageStore, 'trainings.status', 'All');
        $scope.training.pageSize = UtilsSrvc.getPropertyValue($scope.pageStore, 'trainings.grid.pageSize', 10);;
        $scope.training.pageCurr = UtilsSrvc.getPropertyValue($scope.pageStore, 'trainings.grid.pageCurr', 1);;
        $scope.training.itemsTotal = 0;
        $scope.training.selectedItems = [];
        $scope.training.multiSelectMode = false;
        $scope.training.forciblyUpdate = 0;
    };

    // Загрузка
    $scope.training.loadItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        TrainingSrvc.getTrainings(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, $scope.training.status).then(
            function(data){
                $scope.training.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                $scope.training.itemsTotal = data.itemsTotal;
                $scope.training.items = data.items;
                
                if ($scope.training.selectedItems && $scope.training.items && $scope.training.selectedItems.length == 0 && $scope.training.items.length != 0){
                    $scope.training.selectedItems[0] = $scope.training.items[0];
                    $scope.training.selectedItems[0].rowClass = 'info';
                }
            },
            function(response){
                $scope.training.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };
    
    // При смене статуса подгружать соответствующие записи
    $scope.$watch('training.status', function(){
        $scope.training.forciblyUpdate++;
        $scope.pageStore.trainings.status = $scope.training.status;
    });

    // Открыть обучение для просмотра на другой странице
    $scope.training.open = function(item){
         $location.path('/training').search({id: item.id});
    };

    // Вставить в календарь
    $scope.training.insertToCalendar = function(){
        TrainingSrvc.insertToCalendar($scope.training.selectedItems[0].id).then(
            function(data){
                $scope.training.alert = UtilsSrvc.getAlert('Готово!', 'Запись импортирована в календарь', 'success', true);
            },
            function(response){
                $scope.training.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    $scope.training.init();
});

]]></CSP>
</Export>
