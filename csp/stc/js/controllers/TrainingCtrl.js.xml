<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="stc/js/controllers/TrainingCtrl.js" application="/csp/six/" default="1"><![CDATA[
'use strict';
//dddddddddвdввввddd

/*===========================================================================================
Обучение
===========================================================================================*/

controllersModule.controller('TrainingCtrl', function($scope, $location, $filter, $routeParams, UtilsSrvc, ReportSrvc, TrainingSrvc, CompanySrvc, PersonSrvc){
    $scope.training = {};
    $scope.sgroup = {contract:{}};
    $scope.student = {};
    $scope.other = {};


    if (!$scope.pageStore.training || $scope.pageStore.training.id != $routeParams.id)
        $scope.pageStore.training = {id: $routeParams.id, tabSgActive: false, tabSgStActive: false};

    $scope.other.init = function(){
        $scope.sgroup.columns = [
                          {name: 'Плательщик',   sqlName: 'SubGroups->Payer->ShortName->Value', isSorted: true,  isSortable: true,   isDown: false, isSearched: true,  isSearchable: true},
                          {name: 'Слушатели',    sqlName: '',                                   isSorted: false, isSortable: false,  isDown: true,  isSearched: false, isSearchable: false},
                          {name: 'Валюта',       sqlName: 'SubGroups->Currency->Name->Value',   isSorted: false, isSortable: true,   isDown: true,  isSearched: false, isSearchable: true},
                          {name: 'Сумма платежа',sqlName: '',                                   isSorted: false, isSortable: false,  isDown: true,  isSearched: false, isSearchable: false}];

        $scope.sgroup.properties = [{name:'payer.shortName'}, {name:'students.length'}, {name:'currency.name'}, {name:'amount'}];
        $scope.sgroup.pageSize = 10;
        $scope.sgroup.pageCurr = 1;
        $scope.sgroup.itemsTotal = 0;
        $scope.sgroup.selectedItems = [];
        $scope.sgroup.multiSelectMode = false;
        $scope.sgroup.forciblyUpdate = 0;

        $scope.sgroup.loadCurrencies();
        $scope.training.loadData($routeParams.id)
        $scope.sgroup.loadItems($scope.sgroup.pageCurr, $scope.sgroup.pageSize, "SubGroups->Payer->ShortName->Value", false, "", "");
        //--

        $scope.student.columns = [{name: 'Фамилия'}, {name: 'Имя'}, {name: 'Отчество'}, {name: 'Компания'}, {name: 'Email'}, {name: 'Телефон'}, {name: 'Skype'}];
        $scope.student.properties = [{name:'lastName'}, {name:'firstName'}, {name:'middleName'}, {name:'company.shortName'}, {name:'email'}, {name:'phone'}, {name:'skype'}];
        $scope.student.pageSize = 100;
        $scope.student.pageCurr = 1;
        $scope.student.itemsTotal = 0;
        $scope.student.selectedItems = [];
        $scope.student.multiSelectMode = false;  
    };

    // Загрузить валюты
    $scope.sgroup.loadCurrencies = function(){
        TrainingSrvc.getCurrencies().then(
            function(data){
                $scope.sgroup.currencies = data;
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    // Загрузить обучение по ИД
    $scope.training.loadData = function(id){
        TrainingSrvc.getTraining(id).then(
            function(data){
                $scope.training.data = data;
                $scope.training.data.notCorrectAddress = data.address.title;
                
        		$scope.training.dateStart = data.dateStart;
        		$scope.training.dateFinish = data.dateFinish;
        		
                if (data.isCompleted == 0){
                    $scope.training.btnAdditionName = 'Завершить';
                    $scope.training.btnAdditionAction = $scope.training.complete;
                }
                else{
                    $scope.training.btnAdditionName = 'Экспорт сертификатов';
                    $scope.training.btnAdditionAction = $scope.training.exportToCSV;
                }
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    // Обновить данные обучения
    $scope.training.save = function(){
	    TrainingSrvc.saveTraining($scope.training.data).then(
            function(data){
                $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Изменения сохранены.', 'success', true);
                $scope.trainingForm.$setPristine();
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    // Завершить обучение и создать сертификаты
    $scope.training.complete = function(){
        TrainingSrvc.completeTraining($scope.training.data.id).then(
            function(data){
                $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Обучение завершено.', 'success', true);
                $scope.other.init();
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    // Экспорт сертификатов
    $scope.training.exportToCSV = function(){
        ReportSrvc.certificates($scope.training.data.id);
    };

    // Загрузить подгруппы
    $scope.sgroup.loadItems = function(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText){
        TrainingSrvc.getTrainingSubGroups(pageCurr, pageSize, sqlName, isDown, searchSqlName, searchText, $routeParams.id).then(
            function(data){
                $scope.sgroup.pageTotal = Math.ceil(data.itemsTotal / pageSize);
                $scope.sgroup.itemsTotal = data.itemsTotal;
                $scope.sgroup.items = data.items;

                if ($scope.sgroup.selectedItems && $scope.sgroup.items && $scope.sgroup.selectedItems.length == 0 && $scope.sgroup.items.length != 0){
                    $scope.sgroup.selectedItems[0] = $scope.sgroup.items[0];
                    $scope.sgroup.selectedItems[0].rowClass = 'info';
                }
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });
    };

    // Сохранить платеж
    $scope.sgroup.savePayment = function(){
        TrainingSrvc.saveSubGroupPayment({id: $scope.sgroup.selectedItems[0].id, 
                                          currencyId: $scope.sgroup.selectedItems[0].currency.id, 
                                          amount: $scope.sgroup.selectedItems[0].amount}).then(
            function(data){
                $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Платеж для подгруппы сохранен.', 'success', true);
                $scope.sgPaymentForm.$setPristine();
                $scope.sgroup.modalPaymentVisible = false;
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });  
    };
    
    // Сохранить данные договора
    $scope.sgroup.saveContract = function(){
        TrainingSrvc.saveSubGroupContract($scope.sgroup.contract).then(
            function(data){
                $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Данные договора сохранены.', 'success', true);
                $scope.sgContractForm.$setPristine();
                $scope.sgroup.forciblyUpdate++;
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });  
    };

    // Отмена изменений платежа
    $scope.sgroup.cancelPayment = function(){
        if ($scope.sgPaymentForm.$pristine){
            $scope.sgroup.modalPaymentVisible = false;    
        }
        $scope.sgroup.forciblyUpdate++;
        $scope.sgPaymentForm.$setPristine();
    };

    // 
    $scope.$watch('sgroup.selectedItems[0].id', function(){
        if ($scope.sgroup.selectedItems.length != 0){
        	$scope.sgroup.contract = $scope.sgroup.selectedItems[0].contract;
        	$scope.sgroup.dateSt = $scope.sgroup.contract.dateStart;
        	$scope.sgroup.dateFn = $scope.sgroup.contract.dateFinish;
        }
        
        if (!$scope.sgPaymentForm.$dirty)
            return;

        $scope.sgroup.forciblyUpdate++;
        $scope.sgPaymentForm.$setPristine();
    },true);

    // 
    $scope.$watch('sgroup.selectedItems[0].currency.id', function(){ 
        if (!$scope.sgroup.selectedItems[0])
        	return;
        	
        var idx = UtilsSrvc.getIndexes($scope.sgroup.currencies, 'id', $scope.sgroup.selectedItems[0].currency.id)
        
        if (idx.length == 0)
            return;
        
        $scope.sgroup.selectedItems[0].currency.name = $scope.sgroup.currencies[idx[0]].name;
    },true);

  

    // Удалить подгруппу из обучения
    $scope.sgroup.delete = function(item){
        function deleteSGroup(){
            TrainingSrvc.deleteSubGroup($scope.training.data.id, item.id).then(
                function(data){
	                $scope.sgroup.selectedItems = [];
                    $scope.sgroup.forciblyUpdate++;
                    $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Подгруппа удалена.', 'success', true);
                },
                function(response){
                    $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
                });  
        };

        UtilsSrvc.openMessageBox('Удалить подгруппу', $filter('localize')("Удалить подгруппу плательщика") + ' ' + item.payer.shortName + "?", deleteSGroup);  
    };

    // Открыть модальное окно для создания новой подгруппы
    $scope.sgroup.add = function(){
        $('#AddSubGroupModal').modal('show');
        $scope.sgroup.modalAddSubGroupVisible = true;

        if (!$scope.sgroup.companies || $scope.sgroup.companies.length == 0)
            $scope.sgroup.loadCompanies();
    };

    // Добавить подгруппу в обучение
    $scope.sgroup.addSubGroup = function(){
        $scope.sgroup.modalAddSubGroupVisible = false;
        
        TrainingSrvc.createSubGroup({trainingId: $scope.training.data.id, 
                                     payerId: $scope.sgroup.newSubGroupPayer ? $scope.sgroup.newSubGroupPayer.id : ''}).then(
            function(data){
                $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Подгруппа добавлена.', 'success', true);
                $scope.sgroup.forciblyUpdate++;
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            });  
    };

    /* Подгрузить имена компаний */
    $scope.sgroup.loadCompanies = function(){
        CompanySrvc.getAllCompaniesShortInfo().then(
            function(data){
                $scope.sgroup.companies = data;
            },
            function(response){
                $scope.other.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
            }); 
    };

    // Перейти на страницу для добавления слушателя в подгруппу
    $scope.student.add = function(){
        $location.path('/person').search({type: 'sgstud', sgroup: $scope.sgroup.selectedItems[0].id, training: $scope.training.data.id});
    };
    
    // Перейти на страницу для редактирования слушателя в подгруппу
    $scope.student.edit = function(item){
        $location.path('/person').search({type: 'sgstud', id: item.id, training: $scope.training.data.id});
    };

    // Удалить слушателя из подгруппы
    $scope.student.delete = function(item){
        function deleteSGroupStudent(){
            PersonSrvc.deleteSubGroupStudent($scope.sgroup.selectedItems[0].id, item.id).then(
                function(data){
                    $scope.sgroup.forciblyUpdate++;
                    $scope.other.alert = UtilsSrvc.getAlert('Готово!', 'Слушатель удален из подгруппы.', 'success', true);
                },
                function(response){
                    $scope.order.alert = UtilsSrvc.getAlert('Внимание!', response.data, 'error', true);
                });  
        };

        UtilsSrvc.openMessageBox('Удалить слушателя', $filter('localize')("Удалить слушателя") + ' ' + item.lastName + "?", deleteSGroupStudent);   
    };

    // Отформатировать данные перед отправкой формы
    $scope.sgroup.formatData = function(){
        $scope.sgroup.contract.dateStart = UtilsSrvc.getValidDate($scope.sgroup.dateSt);
        if ($scope.sgroup.contract.dateStart == "")
            $scope.sgroup.dateSt = "";

        $scope.sgroup.contract.dateFinish = UtilsSrvc.getValidDate($scope.sgroup.dateFn);
        if ($scope.sgroup.contract.dateFinish == "")
            $scope.sgroup.dateFn = "";

        $scope.sgroup.contract.city = $scope.training.data.city;
        $scope.sgroup.contract.id = $scope.sgroup.selectedItems[0].id;
    };

    $scope.other.init();
});

]]></CSP>
</Export>
